# Generated by Django 2.2.5 on 2019-10-05 09:07

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    # replaces = [('quotes', '0001_squashed_0009_auto_20191005_0902'), ('quotes', '0002_auto_20191005_0906'), ('quotes', '0003_remove_quotecategory_available_to_users')]

    initial = True

    dependencies = [
        ('api', '0003_auto_20190928_1319'),
        ('api', '0002_auto_20191002_1536'),
        ('api', '0009_auto_20190928_1734'),
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='QuoteAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Автор цитаты')),
            ],
            options={
                'verbose_name': 'автор цитат',
                'verbose_name_plural': 'авторы цитат',
            },
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.CharField(max_length=256, verbose_name='Имя иконки в приложении')),
                ('title', models.CharField(max_length=256)),
                ('received_text', models.TextField(default='')),
                ('description_text', models.TextField(default='')),
            ],
            options={
                'verbose_name': 'достижение',
                'verbose_name_plural': 'достижения',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, verbose_name='Название Темы')),
                ('on_complete_achievement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='quotes.Achievement')),
                ('hidden', models.BooleanField(default=False)),
                ('bonus_reward', models.BigIntegerField(default=0, verbose_name='Бонус монет за прохождение Темы, если есть')),
            ],
            options={
                'verbose_name': 'тема',
                'verbose_name_plural': 'темы',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, verbose_name='Название Раздела')),
                ('on_complete_achievement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='quotes.Achievement')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quotes.Topic')),
                ('bonus_reward', models.BigIntegerField(default=0, verbose_name='Бонус монет за прохождение раздела, если есть')),
            ],
            options={
                'verbose_name': 'раздел',
                'verbose_name_plural': 'разделы',
            },
        ),
        migrations.CreateModel(
            name='GameBalance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_profile_balance', models.BigIntegerField(default=0)),
                ('reward_per_doubleup', models.BigIntegerField(default=5)),
                ('reward_per_level_completion', models.BigIntegerField(default=5)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_sessions', models.ManyToManyField(to='api.DeviceSession')),
                ('balance', models.PositiveIntegerField(default=0)),
                ('nickname', models.CharField(default='Пан Инкогнито', max_length=256)),
                ('settings', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='quotes.GameBalance')),
            ],
            options={
                'verbose_name': 'профиль пользователя',
                'verbose_name_plural': 'профили пользователей',
            },
        ),
        migrations.CreateModel(
            name='BalanceRechargeProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_title', models.CharField(max_length=256, verbose_name='Название для админки')),
                ('balance_recharge', models.IntegerField(default=1, verbose_name='Сумма пополнения баланса')),
                ('google_play_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.GooglePlayProduct')),
            ],
            options={
                'verbose_name': 'IAP продукт',
                'verbose_name_plural': 'продукты',
            },
        ),
        migrations.CreateModel(
            name='QuoteCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, verbose_name='Название Категории')),
                ('is_payable', models.BooleanField(default=False, verbose_name='Категория платная?')),
                ('available_to_users', models.ManyToManyField(blank=True, to='quotes.Profile', verbose_name='Профили пользователей которым доступна категория')),
                ('event_description', models.TextField(blank=True, default='')),
                ('event_due_date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('event_title', models.CharField(blank=True, default='', max_length=256)),
                ('is_event', models.BooleanField(default=False)),
                ('event_win_achievement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='quotes.Achievement')),
                ('price_to_unlock', models.BigIntegerField(blank=True, default=0, verbose_name='Стоимость открытия категории если она платная')),
                ('section', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='quotes.Section')),
                ('event_icon', models.CharField(blank=True, default='', max_length=256)),
                ('icon', models.CharField(blank=True, default='', max_length=256)),
                ('on_complete_achievement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='on_complete_achievement', to='quotes.Achievement')),
                ('bonus_reward', models.BigIntegerField(default=0, verbose_name='Бонус монет за прохождение категории, если есть')),
                ('complete_by_users', models.ManyToManyField(blank=True, related_name='category_complete_by_users', to='quotes.Profile', verbose_name='Юзеры которые прошли категорию')),
            ],
            options={
                'verbose_name': 'категория',
                'verbose_name_plural': 'категории',
            },
        ),
        migrations.CreateModel(
            name='AchievementReceiving',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('received_at', models.DateTimeField(auto_now_add=True)),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quotes.Achievement')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quotes.Profile')),
            ],
        ),
        migrations.AddField(
            model_name='achievement',
            name='opened_by_users',
            field=models.ManyToManyField(blank=True, through='quotes.AchievementReceiving', to='quotes.Profile', verbose_name='Профили пользователей которые открыли ачивку'),
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=256, verbose_name='Текст цитаты')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='quotes.QuoteAuthor')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='quotes.QuoteCategory')),
                ('order_in_category', models.BigIntegerField(blank=True, default=0, verbose_name='Порядковый номер уровня в категории')),
            ],
            options={
                'verbose_name': 'цитата',
                'verbose_name_plural': 'цитаты',
            },
        ),
        migrations.AddField(
            model_name='section',
            name='complete_by_users',
            field=models.ManyToManyField(blank=True, related_name='section_complete_by_users', to='quotes.Profile', verbose_name='Юзеры которые прошли секцию'),
        ),
        migrations.AddField(
            model_name='topic',
            name='complete_by_users',
            field=models.ManyToManyField(blank=True, related_name='topic_complete_by_users', to='quotes.Profile', verbose_name='Юзеры которые прошли тему'),
        ),
        migrations.CreateModel(
            name='CategoryUnlockPurchase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_to_unlock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quotes.QuoteCategory')),
                ('google_play_purchase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.GooglePlayIAPPurchase')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quotes.Profile')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Покупка доступа к категории',
                'verbose_name_plural': 'Покупки доступов к категориям',
            },
        ),
        migrations.AddField(
            model_name='quotecategory',
            name='available_to_users2',
            field=models.ManyToManyField(blank=True, related_name='availability_to_profile', through='quotes.CategoryUnlockPurchase', to='quotes.Profile', verbose_name='Профили пользователей которым доступна категория'),
        ),
        migrations.RemoveField(
            model_name='quotecategory',
            name='available_to_users',
        ),
    ]
